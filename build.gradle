import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'org.jetbrains.kotlin.jvm' version '1.8.22'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.8.22'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.8.22'
}

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

bootJar {
    enabled = false
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'kotlin-jpa'
    apply plugin: 'kotlin-spring'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'


    group = 'dev.marcal'
    version = '1.11.0'

    repositories {
        mavenCentral()
    }

    springBoot {
        mainClass = "dev.marcal.chatvault.Boot"
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
        implementation 'org.jetbrains.kotlin:kotlin-reflect'
        implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3")
        runtimeOnly 'org.postgresql:postgresql'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation("io.mockk:mockk:1.13.5")
    }

    tasks.withType(KotlinCompile) {
        kotlinOptions {
            freeCompilerArgs += '-Xjsr305=strict'
            jvmTarget = '17'
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}




